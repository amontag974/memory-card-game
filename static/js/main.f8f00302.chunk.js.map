{"version":3,"sources":["components/Header.js","components/Card.js","cardImages.js","components/CardContainer.js","components/WinScreen.js","App.js","index.js"],"names":["Header","props","className","currentScore","highScore","Card","onClick","src","id","alt","cardImages","CardContainer","cardIDOrder","shuffleCards","binarySearch","cardArray","cardID","midpoint","Math","floor","length","slice","i","currentCardID","card","push","getCardArray","map","image","WinScreen","winScreen","App","useState","setCurrentScore","setHighScore","selections","setSelections","checkMaxScore","pickCard","random","e","tempCurrentScore","includes","target","newSelections","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8f00302.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n\n  return (\n    <div className=\"header\">\n      <h1>Memory Game</h1>\n      <div className=\"scores-container\">\n        <div className=\"current-score-container\">\n          <span className=\"score-type\">Current Score </span>\n          <span className=\"score\">{props.currentScore}</span>\n        </div>\n        <div className=\"high-score-container\">\n          <span className=\"score-type\">High Score </span>\n          <span className=\"score\">{props.highScore}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Card(props) {\n  return (\n    <div className=\"img-container\" onClick={props.onClick}>\n      <img src={props.src} id={props.id} alt={`img-${props.id}`}></img>\n    </div>\n  )\n}\n\nexport default Card;","const cardImages = [\n  {\n    src: \"./img/img0.jpg\",\n    id: 0\n  },\n  {\n    src: \"./img/img1.jpg\",\n    id: 1\n  },\n  {\n    src: \"./img/img2.jpg\",\n    id: 2\n  },\n  {\n    src: \"./img/img3.jpeg\",\n    id: 3\n  },\n  {\n    src: \"./img/img4.jpg\",\n    id: 4\n  },\n  {\n    src: \"./img/img5.jpg\",\n    id: 5\n  },\n  {\n    src: \"./img/img6.jpg\",\n    id: 6\n  },\n  {\n    src: \"./img/img7.png\",\n    id: 7\n  },\n  {\n    src: \"./img/img8.jpg\",\n    id: 8\n  },\n  {\n    src: \"./img/img9.jpg\",\n    id: 9\n  },\n  {\n    src: \"./img/img10.png\",\n    id: 10\n  },\n  {\n    src: \"./img/img11.png\",\n    id: 11\n  }\n]\n\nexport default cardImages;","import React from 'react';\nimport Card from './Card';\nimport cardImages from '../cardImages'\n\nfunction CardContainer(props) {\n  const cardIDOrder = props.shuffleCards();\n\n  const getCardArray = cardIDOrder => {\n    const cardArray = [];\n\n    for(let i = 0; i < cardIDOrder.length; i++) {\n      let currentCardID = cardIDOrder[i];\n      let card = binarySearch(cardImages, currentCardID);\n      \n      cardArray.push(card);\n    }\n\n    return cardArray;\n  }\n\n  const binarySearch = (cardArray, cardID) => {\n    let newCardArray;\n    let midpoint = Math.floor(cardArray.length / 2)\n\n    if (cardArray.length > 1) {\n      if (cardID < cardArray[midpoint].id) {\n        newCardArray = cardArray.slice(0, midpoint);\n        return binarySearch(newCardArray, cardID);\n      }\n      else {\n        newCardArray = cardArray.slice(midpoint);\n        return binarySearch(newCardArray, cardID);\n      }\n    }\n\n    return cardArray[0];\n  }\n\n  const createCards = () => {\n    const cardArray = getCardArray(cardIDOrder)\n\n    const cards = cardArray.map( image => {\n      return (\n        <Card\n          key={image.id} \n          src={image.src}\n          id={image.id}\n          onClick={props.onClick}\n        />\n      );\n    });\n    return cards;\n  }\n\n  return (\n    <div className=\"card-container\">\n      {createCards()}\n    </div>\n  );\n}\n\nexport default CardContainer;","import React from 'react';\n\nfunction WinScreen(props) {\n  let winScreen = null;\n\n  if (props.currentScore === 12 ) {\n    winScreen = (<div className=\"win-screen\">\n      <h2 className=\"win-screen-header\">You Win!</h2>\n      <span className=\"win-screen-text\">Click any square to start a new game</span>\n    </div>)\n  }\n\n  return <>{winScreen}</>;\n}\n\nexport default WinScreen;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport CardContainer from './components/CardContainer';\nimport WinScreen from './components/WinScreen';\nimport './App.css';\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [selections, setSelections] = useState([]);\n\n  const handleClick = e => {\n\n    let tempCurrentScore = currentScore + 1;\n    \n    if (selections.includes(e.target.id)) {\n      setCurrentScore(0);\n      setSelections([]);\n\n    } else {\n      const newSelections = [...selections];\n      newSelections.push(e.target.id);\n      setSelections(newSelections);\n      checkMaxScore(tempCurrentScore);\n      setCurrentScore(tempCurrentScore);\n    }\n  }\n\n  const checkMaxScore = currentScore => {\n    if (currentScore >= highScore) {\n      const tempScore = currentScore\n      setHighScore(tempScore);\n    }\n  }\n\n  const shuffleCards = () => {\n    const cardIDOrder = [];\n    let card = pickCard();\n\n    while(cardIDOrder.length < 12) {\n      if (cardIDOrder.includes(card)) {\n        card = pickCard();\n      } \n      else {\n        cardIDOrder.push(card);\n      }\n    }\n    \n    return cardIDOrder;\n  }\n\n  const pickCard = () => {\n    const card = Math.floor(Math.random()*12);\n    return card;\n  }\n  \n  return (\n    <>\n      <div className=\"game\">\n        <Header\n          currentScore = {currentScore}\n          highScore = {highScore}\n        />\n        <CardContainer\n          onClick = {handleClick}\n          shuffleCards = {shuffleCards}\n        />\n      </div>\n      <WinScreen \n        currentScore = {currentScore}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}